@using WebBookStore.Models;
@model List<Cart>
@{
    Layout = "~/Views/Layout/PurchaseLayout.cshtml";
}
@{ 
    string classToast = "";
    string classIcon = "";
    string DisCount = ViewBag.Discount;
    if (DisCount != "0")
    {
        classToast = "success";
        classIcon = "fa-check";
    }
    else
    {
        classToast = "fail";
        classIcon = "fa-times";
    }
}


<div class="toast @classToast row">
    <div class="toast-icon">
        <i class="fa @classIcon "></i>
    </div>
    <div class="toast-content">
        <h3>Thông báo !!!</h3>
        <p>Trạng thái sau khi áp dụng discount</p>
    </div>
</div>
<div class="order-info">
    <a href="@Url.Action("Index", "Home")">
        <img src="~/Asset/img/logo.png" />
    </a>
    @using (Html.BeginForm("OrderCart", "Cart"))
    {
        <div class="order-info__item">
            <p>Số điện thoại liên lạc</p>
            <input class="contact-input" type="text" name="Contact" placeholder="Số Điện Thoại" value="@ViewBag.Phone">
        </div>
        <div class="order-info__item">
            <p>Địa chỉ giao hàng</p>
            <input class="name-input" type="text" name="Name" placeholder="Tên người nhận" value="@ViewBag.Name">
            <input class="address-input" type="text" name="Address" placeholder="Địa chỉ người nhận" value="@ViewBag.Address">
            <select class="city-input" type="text" name="City">
                <option selected value="@ViewBag.City">@ViewBag.City</option>
            </select>
        </div>
        <div class="order-ctrl">
            <button class="btn btn-secondary">
                Đặt hàng
            </button>
            <a href="@Url.Action("ViewCart", "Cart")">Trở về giỏ hàng</a>
        </div>
    }
</div>
<div class="order-detail">
    <div class="order__list">
        @{
            foreach (var item in Model)
            {
                <div class="order__item row">
                    <div class="order__item-img">
                        <img src="@item.sImages" alt="">
                        <span>@item.sQuantity</span>
                    </div>
                    <h3 class="name">@item.sTitle</h3>
                    <p class="order__item-price">
                        <span class="price-number">@item.Total</span> VND
                    </p>
                </div>
            }
        }
    </div>
    @using (Html.BeginForm("GetDiscount", "Cart"))
    {
        <input style="display: none" class="contact-hidden" name="contact-hidden" />
        <input style="display: none" class="name-hidden" name="name-hidden" />
        <input style="display: none" class="address-hidden" name="address-hidden" />
        <input style="display: none" class="city-hidden" name="city-hidden" />
        <div class="order-discount row">
            <input type="text" name="discount" placeholder="Mã giảm giá" value="@ViewBag.Discountid">
            <button class="btn btn-secondary">Áp dụng</button>
        </div>
    }
    <div class="order-total">
        @{
            <p class="row">Tổng tiền: <span><span class="price-number">@ViewBag.TotalPrice</span> VND</span></p>
            <p class="row">Giảm giá: <span>@ViewBag.Discount%</span></p>
            if (@ViewBag.ApproveDiscount == null)
            {
                <p class="row">Thành tiền: <span><span class="price-number">@ViewBag.TotalPrice</span> VND</span></p>
            }
            else
            {
                <p class="row">Thành tiền: <span><span class="price-number">@ViewBag.ApproveDiscount</span> VND</span></p>
            }
        }
    </div>
    <img src="~/Asset/img/payment-method.png" />
</div>

<script type="text/javascript">
    const contactInput = document.querySelector(".contact-input");
    contactInput.addEventListener("change", (e) => {
        const contactInputHidden = document.querySelector(".contact-hidden");
        contactInputHidden.value = e.target.value;
        //console.log(contactInputHidden.value);
    });

    const nameInput = document.querySelector(".name-input");
    nameInput.addEventListener("change", (e) => {
        const nameInputHidden = document.querySelector(".name-hidden");
        nameInputHidden.value = e.target.value;
        //console.log(nameInputHidden.value);
    });

    const addressInput = document.querySelector(".address-input");
    addressInput.addEventListener("change", (e) => {
        const addressInputHidden = document.querySelector(".address-hidden");
        addressInputHidden.value = e.target.value;
        //console.log(addressInputHidden.value);
    });

    const cityInput = document.querySelector(".city-input");
    cityInput.addEventListener("change", (e) => {
        const cityInputHidden = document.querySelector(".city-hidden");
        cityInputHidden.value = e.target.value;
        //console.log(cityInputHidden.value);
    });
    const toast = document.querySelector(".toast");
    const timeLine = setTimeout(() => {
        toast.classList.add("hide");
        clearTimeout(timeLine);
    }, 3000)
</script>
<script>
    const prices = document.querySelectorAll(".price-number");
    prices.forEach(price => {
        price.innerHTML = Number(price.innerHTML).toLocaleString("en-US");
    })
</script>